---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: stories.bubustack.io
spec:
  group: bubustack.io
  names:
    categories:
    - bubu
    - ai
    - workflows
    kind: Story
    listKind: StoryList
    plural: stories
    shortNames:
    - story
    singular: story
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.stepsTotal
      name: Steps
      type: integer
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Story represents a workflow definition - a sequence of steps that accomplish a business goal

          Stories are the main workflows in your system. Think of them like:
          - GitHub Actions workflows
          - Jenkins pipelines
          - Zapier automations
          - Any business process you want to automate

          Stories orchestrate Engrams (the workers) to create powerful workflows:
          - CI/CD pipeline: checkout → test → build → deploy
          - Data processing: extract → transform → load → notify
          - E-commerce: validate order → charge payment → ship → update inventory
          - Content moderation: analyze → classify → approve/reject → notify
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StorySpec defines what the workflow does and how it should
              run
            properties:
              inputsSchema:
                description: InputsSchema defines the schema for the data required
                  to start a StoryRun.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              output:
                description: |-
                  Output defines a template for the Story's final output.
                  This CEL expression is evaluated upon successful completion of the story,
                  and the result is stored in the StoryRun's status.output field.
                  It has access to 'inputs' and 'steps' contexts.
                  e.g., {"final_message": "processed " + steps.load_data.outputs.count + " records"}
                type: object
                x-kubernetes-preserve-unknown-fields: true
              outputsSchema:
                description: OutputsSchema defines the schema for the data this Story
                  is expected to produce.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              pattern:
                default: batch
                description: |-
                  Pattern specifies the execution model for the Story.
                  "batch" stories are run to completion via a StoryRun.
                  "streaming" stories create long-running workloads that process data continuously.
                enum:
                - batch
                - streaming
                type: string
              policy:
                description: How should this Story behave? (timeouts, retries, storage,
                  etc.)
                properties:
                  concurrency:
                    description: Concurrency limits
                    format: int32
                    type: integer
                  execution:
                    description: Default execution settings (can be overridden at
                      step level)
                    properties:
                      job:
                        description: Job configuration
                        properties:
                          backoffLimit:
                            description: Backoff limit for jobs
                            format: int32
                            type: integer
                          restartPolicy:
                            description: Restart policy
                            type: string
                          ttlSecondsAfterFinished:
                            description: TTL for job cleanup
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: Resource configuration (actual values, not defaults)
                        properties:
                          cpuLimit:
                            description: CPU limit
                            type: string
                          cpuRequest:
                            description: CPU request
                            type: string
                          memoryLimit:
                            description: Memory limit
                            type: string
                          memoryRequest:
                            description: Memory request
                            type: string
                        type: object
                      retry:
                        description: Retry configuration
                        properties:
                          backoff:
                            description: |-
                              Backoff strategy for retry delays
                              - exponential: 1s, 2s, 4s, 8s... (doubles each time)
                              - linear: 1s, 2s, 3s, 4s... (increases by delay each time)
                              - constant: 1s, 1s, 1s, 1s... (same delay each time)
                            enum:
                            - exponential
                            - linear
                            - constant
                            type: string
                          delay:
                            default: 1s
                            description: |-
                              Base delay between retries
                              Examples: "1s", "5s", "30s"
                            type: string
                          maxRetries:
                            default: 3
                            description: Maximum number of retry attempts
                            format: int32
                            maximum: 10
                            minimum: 0
                            type: integer
                        type: object
                      security:
                        description: Security configuration
                        properties:
                          allowPrivilegeEscalation:
                            description: Whether to allow privilege escalation
                            type: boolean
                          readOnlyRootFilesystem:
                            description: Read-only root filesystem
                            type: boolean
                          runAsNonRoot:
                            description: Whether to run as non-root user
                            type: boolean
                          runAsUser:
                            description: User ID to run as
                            format: int64
                            type: integer
                        type: object
                      serviceAccountName:
                        description: ServiceAccount to use for workloads created from
                          this policy.
                        type: string
                      timeout:
                        description: Timeout configuration
                        type: string
                    type: object
                  retries:
                    description: Retry behavior
                    properties:
                      continueOnStepFailure:
                        description: Whether to continue story on step failure
                        type: boolean
                      stepRetryPolicy:
                        description: Default retry policy for steps
                        properties:
                          backoff:
                            description: |-
                              Backoff strategy for retry delays
                              - exponential: 1s, 2s, 4s, 8s... (doubles each time)
                              - linear: 1s, 2s, 3s, 4s... (increases by delay each time)
                              - constant: 1s, 1s, 1s, 1s... (same delay each time)
                            enum:
                            - exponential
                            - linear
                            - constant
                            type: string
                          delay:
                            default: 1s
                            description: |-
                              Base delay between retries
                              Examples: "1s", "5s", "30s"
                            type: string
                          maxRetries:
                            default: 3
                            description: Maximum number of retry attempts
                            format: int32
                            maximum: 10
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  storage:
                    description: Storage configuration
                    properties:
                      s3:
                        description: S3 specifies the configuration for an S3-compatible
                          object store.
                        properties:
                          authentication:
                            description: Authentication configures how the workload
                              authenticates with S3.
                            properties:
                              secretRef:
                                description: |-
                                  SecretRef references a Kubernetes Secret that contains the credentials.
                                  The secret must contain keys 'accessKeyID' and 'secretAccessKey'.
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceAccountAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  ServiceAccountAnnotations allows specifying annotations to be added to the
                                  auto-generated ServiceAccount. This is the recommended approach for
                                  IAM-based authentication on cloud providers (e.g., IRSA on EKS).
                                  The key-value pairs will be added to the ServiceAccount's metadata.annotations.
                                type: object
                            type: object
                          bucket:
                            description: Bucket is the name of the S3 bucket.
                            type: string
                          endpoint:
                            description: Endpoint is the S3 endpoint URL. Useful for
                              S3-compatible stores like MinIO.
                            type: string
                          region:
                            description: Region is the AWS region of the bucket.
                            type: string
                        required:
                        - authentication
                        - bucket
                        type: object
                    type: object
                  timeouts:
                    description: Timeouts
                    properties:
                      step:
                        description: Default timeout for individual steps
                        type: string
                      story:
                        description: Total time for the entire story
                        type: string
                    type: object
                  with:
                    description: With provides the inputs for the sub-story, mirroring
                      the 'with' field in an Engram step.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              steps:
                description: |-
                  The actual workflow steps - this is where the magic happens!
                  Steps run in sequence unless you use parallel/condition logic
                items:
                  description: |-
                    Step defines a single unit of work within a Story.
                    Steps are the building blocks of stories, defining everything from custom logic
                    to control flow like loops, conditions, and parallel execution.
                  properties:
                    execution:
                      description: |-
                        Override execution settings for this specific step
                        Use sparingly - most configuration should be at the story or engram level
                      properties:
                        automountServiceAccountToken:
                          description: |-
                            AutomountServiceAccountToken controls whether a service account token should be automatically mounted.
                            Defaults to false.
                          type: boolean
                        imagePullPolicy:
                          description: Image pull policy override
                          type: string
                        probes:
                          description: |-
                            Probe overrides allow disabling template-defined probes at instance level
                            Note: You can only disable probes, not redefine them
                          properties:
                            disableLiveness:
                              description: DisableLiveness disables the liveness probe
                              type: boolean
                            disableReadiness:
                              description: DisableReadiness disables the readiness
                                probe
                              type: boolean
                            disableStartup:
                              description: DisableStartup disables the startup probe
                              type: boolean
                          type: object
                        retry:
                          description: Retry policy override
                          properties:
                            backoff:
                              description: |-
                                Backoff strategy for retry delays
                                - exponential: 1s, 2s, 4s, 8s... (doubles each time)
                                - linear: 1s, 2s, 3s, 4s... (increases by delay each time)
                                - constant: 1s, 1s, 1s, 1s... (same delay each time)
                              enum:
                              - exponential
                              - linear
                              - constant
                              type: string
                            delay:
                              default: 1s
                              description: |-
                                Base delay between retries
                                Examples: "1s", "5s", "30s"
                              type: string
                            maxRetries:
                              default: 3
                              description: Maximum number of retry attempts
                              format: int32
                              maximum: 10
                              minimum: 0
                              type: integer
                          type: object
                        security:
                          description: Security context override
                          properties:
                            allowPrivilegeEscalation:
                              description: Whether to allow privilege escalation
                              type: boolean
                            readOnlyRootFilesystem:
                              description: Read-only root filesystem
                              type: boolean
                            requiredSecrets:
                              description: Required secrets for this workload
                              items:
                                type: string
                              type: array
                            runAsNonRoot:
                              description: Whether to run as non-root user
                              type: boolean
                            runAsUser:
                              description: User ID to run as
                              format: int64
                              type: integer
                          type: object
                        serviceAccountName:
                          description: ServiceAccount to use for the workload.
                          type: string
                        timeout:
                          description: Timeout for execution
                          type: string
                      type: object
                    id:
                      description: |-
                        ID is an optional, unique identifier for a step instance.
                        While 'name' identifies the step in logs and outputs, 'id' can be used
                        programmatically to reference a specific node in the workflow graph.
                      maxLength: 63
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    if:
                      description: |-
                        If provides a condition for executing this step.
                        The step is only executed if the CEL expression evaluates to true.
                      type: string
                    name:
                      description: |-
                        Name is a human-readable identifier for the step.
                        It's used to reference this step's outputs in other steps.
                        e.g., '{{ steps.my-step-name.outputs.some_field }}'
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    needs:
                      description: |-
                        Needs explicitly defines a list of step names that must be completed before this step can run.
                        This is used to create an execution order for steps that don't have an implicit data dependency.
                      items:
                        type: string
                      type: array
                    ref:
                      description: |-
                        Ref points to an Engram to execute.
                        This is a shortcut for a step of type 'engram'.
                        If 'ref' is used, 'type' should be omitted.
                      properties:
                        name:
                          description: |-
                            Name of the referenced object.
                            Must be a valid DNS-1123 label as defined by Kubernetes naming conventions.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referenced object.
                            If empty, defaults to same namespace as the referencing object.

                            Cross-namespace references should be used carefully and only when
                            multi-tenancy is properly configured. Consider the security implications:
                            - Ensure RBAC policies allow cross-namespace access
                            - Validate that the target namespace is trusted
                            - Monitor cross-namespace references for security compliance
                          maxLength: 63
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        uid:
                          description: |-
                            UID is a type that holds unique ID values, including UUIDs.  Because we
                            don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                            intent and helps make sure that UIDs and names do not get conflated.
                          type: string
                      required:
                      - name
                      type: object
                    secrets:
                      additionalProperties:
                        type: string
                      description: |-
                        Secrets maps template secret definitions to actual Kubernetes secrets for this step.
                        This is only applicable to 'engram' steps and overrides any secret mappings on the Engram itself.
                        Example: {"apiKey": "openai-credentials", "database": "postgres-creds"}
                      type: object
                    type:
                      description: |-
                        Type determines the kind of operation this step performs.
                        Use built-in types for common patterns. If omitted and 'ref' is present, the step is an 'engram' step.

                        Built-in primitive types:
                        - condition: if/then/else logic
                        - loop: iterate over arrays or repeat N times
                        - parallel: run multiple steps simultaneously
                        - sleep: wait for a specified duration
                        - stop: halt story execution (success or failure)
                        - switch: multi-way branching like switch/case
                        - filter: filter arrays or objects based on conditions
                        - transform: modify data structure or format
                        - executeStory: run another story as a sub-story
                        - setData: set variables or update context
                        - mergeData: combine data from multiple sources
                        - wait: wait for external conditions
                        - throttle: rate limiting
                        - batch: group operations
                        - gate: wait for a manual approval
                      enum:
                      - condition
                      - loop
                      - parallel
                      - sleep
                      - stop
                      - switch
                      - filter
                      - transform
                      - wait
                      - throttle
                      - batch
                      - executeStory
                      - setData
                      - mergeData
                      - gate
                      type: string
                    with:
                      description: |-
                        With provides the configuration for the step. The expected structure of this block
                        is determined by the step 'type'. For example:
                        - for 'engram': the inputs to the engram.
                        - for 'executeStory': contains 'storyRef', 'waitForCompletion', and 'with'.
                        - for 'loop': contains 'items' and 'template'.
                        The structure is validated at runtime by the controller.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  type: object
                maxItems: 100
                minItems: 1
                type: array
              streamingStrategy:
                default: PerStory
                description: |-
                  StreamingStrategy defines the deployment strategy for long-running engrams in a streaming story.
                  "PerStory" creates a single, shared set of long-running engrams for the Story.
                  "PerStoryRun" creates a dedicated set of long-running engrams for each StoryRun.
                  This field is only applicable when `pattern` is "streaming".
                enum:
                - PerStory
                - PerStoryRun
                type: string
            required:
            - steps
            type: object
          status:
            description: StoryStatus defines the observed state of a Story.
            properties:
              conditions:
                description: |-
                  Standard Kubernetes conditions for detailed status tracking (e.g., "Ready", "Validated")
                  This will indicate if the Story's syntax is valid and all referenced Engrams exist.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this Story.
                format: int64
                type: integer
              stepsTotal:
                description: |-
                  StepsTotal reflects the total number of steps defined in the story's specification.
                  This provides a quick way to understand the complexity of the story.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
